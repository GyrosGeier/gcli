.Dd $Mdocdate$
.Dt GHCLI 1
.Os
.Sh NAME
.Nm ghcli
.Nd interact with GitHub and GitLab without using a web-browser
.Sh SYNOPSIS

.Nm
.Op Fl t Ar forge-type
.Cm issues Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm pulls Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm comment Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm review Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm forks Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm repos Op Ar options
.Nm
.Cm gists Op Ar options
.Nm
.Cm snippets Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm releases Op Ar options
.Nm
.Op Fl t Ar forge-type
.Cm comment Op Ar options
.Nm
.Cm version
.Sh DESCRIPTION
.Nm
can be used to interact with both GitHub and GitLab from the command
line in order to make many tasks easier.

Calls to
.Nm
usually consist of either only the subcommand to list requested data
or the subcommand plus further subcommands or options to perform
various tasks. Some commands may also take an item to operate on and
accept multiple actions that will be performed on the item (e.g. PRs
may be summarized, comments fetched and a diff printed all in one
command).
.Sh SUBCOMMANDS
Most of these subcommands are documented in dedicated man pages.
.Bl -tag -width indent
.It Cm issues
Issues in repositories. See
.Xr ghcli-issues 1 .
.It Cm pulls
Pull Requests on repositories. See
.Xr ghcli-pulls 1 .
.It Cm forks
Forking repositories. See
.Xr ghcli-forks 1 .
.It Cm gists
Github Gists are like paste bins to where you can dump code snippets
etc. See
.Xr ghcli-gists 1 .
.It Cm snippets
Support for Gitlab snippets. See
.Xr ghcli-snippets 1 .
.It Cm repos
Manage your own or other repositories. See
.Xr ghcli-repos 1 .
.It Cm comment
Submit comments under issues and PRs. See
.Xr ghcli-comment 1 .
.It Cm version
Print version and exit.
.El
.Sh OPTIONS
.Bl -tag -width indent
.It Fl t , -type Ar forge-type
Manually override the forge type.
.Ar forge-type
can be either github or gitlab.
.El

Common options across almost all of the subcommands are:
.Bl -tag -width indent
.It Fl s , -sorted
Reverse the output such that most recent items appear at the bottom.
.It Fl n , -count Ar n
Fetch multiple pages of data. The default is usually 30 items, but
this parameter allows to fetch more than that. Setting
.Ar n
to -1 will result in all pages being queried and all items being read.
However, be careful with that, since if there is a lot of data to be
fetched, it may result in rate limiting by the Github API, aside from
the fact that it may also take a considerable amount of time to
process.
.It Fl a , -all
Fetch all data, including closed issues and closed/merged PRs.
.It Fl y , -yes
Do not ask for confirmation when performing destructive operations or
performing submissions. Always assume yes.
.It Fl o , -owner Ar owner
Operate on the given owner (organization or user).  Can only be used
in combination with
.Fl r .
.It Fl r , -repo Ar repo
Operate on the given repository.  Can only be used in combination with
.Fl o .
.It Fl i Ar id
Operate on the given issue number.
.It Fl p Ar pr
Operate on the given pull request.
.El

Other options specific to the context are documented in the respective
man pages.
.\" .Sh IMPLEMENTATION NOTES
.\" Not used in OpenBSD.
.Sh ENVIRONMENT
.Bl -tag -width indent
.It Ev EDITOR
If the ghcli config file does not name an editor,
.Nm
may use this editor.
.It Ev XDG_CONFIG_DIR
There should be a subdirectory called ghcli in the directory this
environment variable points to where
.Nm
will go looking for its configuration file. See
.Sx FILES .
.El
.Sh FILES
.Bl -tag -width ${XDG_CONFIG_DIR}/ghcli/config -compact

.It Pa ${XDG_CONFIG_DIR}/ghcli/config
The config file for
.Nm .
It shall contain the following data:

.Bd -literal
editor=/path/to/ganoooo/emacs
github.account=herrhotzenplotz
github.token=<valid github api token>
github.api_base=https://api.github.com
gitlab.account=herrhotzenplotz
gitlab.token=<valid gitlab api token>
gitlab.api_base=https://api.gitlab.com
.Ed

In case api_base is not set, it defaults to https://api.github.com.

For the API token, you can set whatever scopes you want. However, I
recommend setting the following on GitHub:
.Sq admin:org, delete_repo, gist, repo, workflow .
On GitLab you only need the
.Sq api
scope.

If editor is not set in the config file,
.Nm
will use
.Ev EDITOR
from the environment.

.It Pa .ghcli
A repo-specific config file that may contain the following data:
.Bd -literal
pr.upstream=herrhotzenplotz/ghcli
pr.base=trunk
.Ed

It is intended to be committed into the repo so that users don't have
to manually specify all the options like
.Fl -in ,
.Fl -from ,
.Fl -base etc.

.El
.Sh EXAMPLES
List all open issues in the current upstream repository:
.Bd -literal -width indent
$ ghcli issues
.Ed

Merge upstream PR #22:
.Bd -literal -width indent
$ ghcli pulls -p 22 merge
.Ed

Get a summary and comments of upstream PR #22:
.Bd -literal -width indent
$ ghcli pulls -p 22 summary comments
.Ed
.Sh SEE ALSO
.Xr git 1 ,
.Xr ghcli-issues 1 ,
.Xr ghcli-pulls 1 ,
.Xr ghcli-comment 1 ,
.Xr ghcli-review 1 ,
.Xr ghcli-forks 1 ,
.Xr ghcli-repos 1 ,
.Xr ghcli-gists 1 ,
.Xr ghcli-releases 1 ,
.Xr ghcli-comment 1
.\" .Sh STANDARDS
.Sh HISTORY
The idea for
.Nm
appeared during a long rant on IRC where the issue with the official
tool written by GitHub became clear to be the manual dialing and DNS
resolving by the Go runtime, circumventing almost the entirety of the
IP and DNS services of the operating system and leaking sensitive
information when using Tor.

Implementation started in October 2021 with the goal of having a
decent, sufficiently portable and secure version of a cli utility to
interact with the GitHub world without using the inconvenient web
interface.

Later, GitLab support was added.
.Sh AUTHORS
.An Nico Sonack aka. herrhotzenplotz Aq Mt nsonack@outlook.com
.Sh CAVEATS
Not all features that are available from the web version are available in
.Nm .
However, it is a non-goal of the project to provide all this
functionality.
.Sh BUGS
Yes. It is software. Please report issues preferably via e-mail or on
GitHub. You may also report an issue like so:
.Bd -literal -width indent
$ ghcli -t github issues create -o herrhotzenplotz -r ghcli "BUG : ..."
.Ed
.Sh SECURITY CONSIDERATIONS
It is written in C. If it were written in Rust, it would have been
much safer.
